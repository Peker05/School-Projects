import java.io.File;
import java.io.IOException;
import java.util.Map;

/**
 * This class accomplishes Mission Firewall
 */
public class MalwareScanner {

    private final Map<String, Malware> malwareDB;

    public MalwareScanner(Map<String, Malware> malwareDB) {
        this.malwareDB = malwareDB;
    }

    /**
     * TODO: Open and read the input file while searching for threats
     * TODO: Write results to both; a new file name "scanLog.txt" and to the console
     *
     * @param filename the input file
     * @throws IOException the io exception
     */
    public void scanFile(String filename) throws IOException {
        //System.out.println("##MISSION FIREWALL INITIATED##");
        Util.write("firewall_output.txt", "##MISSION FIREWALL INITIATED##");
        // TODO: YOUR CODE HERE
        //open the file
        //read the file line by line
        //calculate the hash of each message
        //try to locate it in the malware database
        //if the message is in the malware database then the message should be identified as malware
        //write the result to both; a new file name "scanLog.txt" and to the console
        //close the file
        //write a file name scanLog.txt <hash of the identified malware>@<line number>
        //intialize the code

        File file = new File(filename);
        //open the file
        java.util.Scanner scanner = new java.util.Scanner(file);
        //read the file line by line
        int lineNumber = 0;
        int numOfMalware = 0;
        System.out.println("Started scanning..." );
        Util.write("firewall_output.txt", "Started scanning...");
        while (scanner.hasNextLine()) {
            lineNumber++;
            String line = scanner.nextLine();
            //calculate the hash of each message

            String hash = turbo64(line);

            //try to locate it in the malware database
            if (malwareDB.containsKey(hash)) {
                numOfMalware++;
                //if the message is in the malware database then the message should be identified as malware
                Util.write("scanLog.txt", hash + "@" + lineNumber);
                System.out.println("--------------------------------------------------------------------------------");
                System.out.println("Detected malware!");
                System.out.println("Name: " + malwareDB.get(hash).getTitle());
                System.out.println("Threat Level: " + malwareDB.get(hash).getLevel());
                System.out.println("Hash:" + hash);
                Util.write("firewall_output.txt", "------------------------------------------------------");
                Util.write("firewall_output.txt", "Detected malware !");
                Util.write("firewall_output.txt", "Name: " + malwareDB.get(hash).getTitle());
                Util.write("firewall_output.txt", "Threat level: " + malwareDB.get(hash).getLevel());
                Util.write("firewall_output.txt", "Hash: " + hash);
            }
        }
        if (numOfMalware == 0) {
            System.out.println("--------------------------------------------------------------------------------");
            Util.write("firewall_output.txt", "------------------------------------------------------");
            System.out.println("No malware detected");
            Util.write("firewall_output.txt", "No malware detected");
        }else {
            System.out.println("--------------------------------------------------------------------------------");
            Util.write("firewall_output.txt", "------------------------------------------------------");
            System.out.println("Scan complete! " +numOfMalware +" threats found and eliminated. Generating log file...");
            Util.write("firewall_output.txt", "Scan complete ! " +numOfMalware +" threats detected and deleted. Generating log file...");
        }
        //System.out.println("##MISSION FIREWALL COMPLETED##");
        Util.write("firewall_output.txt", "##MISSION FIREWALL COMPLETED##");
        scanner.close();


    }

    public static String turbo64(String in) {
        // Implement turbo64 algorithm given by the assignment instructions
        // TODO: YOUR CODE HERE
        /*
        * procedure TURBO-64(input_str)
        *
        *  MOD_TURBO ← 4294967291 a←0
            b←1
            for c in input_str do
            a ← (a + int(c)) % MOD_TURBO b ← (a + b) % MOD_TURBO
            end for
            return hex((b << 32) | a) end procedure*/
        //write code given in the psudocode
        long a = 0;
        long b = 1;
        long MOD_TURBO = 4294967291L;
        for (int i = 0; i < in.length(); i++) {
            a = (a + in.charAt(i)) % MOD_TURBO;
            b = (a + b) % MOD_TURBO;
        }
        return Long.toHexString( ((b << 32) | a));
    }
}
